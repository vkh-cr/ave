version: '3.9'

networks:
  stack_network:
    driver: bridge
    name: stack_network

volumes:
  db_data: {}
  static_files: {}
  media_files: {}

# TODO: nginx as a proxy and for static/media
# TODO: volumes: data/log persistency
services:
  db:
    image: postgres:14.5
    environment:
      PGDATA: /var/lib/postgresql/data
      POSTGRES_DB: av
      POSTGRES_PASSWORD: postgres
      POSTGRES_USER: postgres
    healthcheck:
      interval: 20s
      retries: 2
      test:
      - CMD-SHELL
      - pg_isready
      timeout: 5s
    user: postgres
    networks:
      stack_network:
        aliases:
          - db
    volumes:
      - db_data:/var/lib/postgresql/data

  #debug:
  #  image: ubuntu:latest
  #  command: tail -F backend

  backend:
    image: zdeneksoftic/av-backend:v0.0.1-dev2
    environment:
      DJANGO_SETTINGS_MODULE: av_backend.settings.production
      DATABASE_URL: postgresql://postgres:postgres@db:5432/av
      SECRET_KEY: cbasdyt792387523B23GHF366
      ALLOWED_HOSTS: "*"
      GOOGLE_APIS_CREDENTIALS_FILE: "/app/secret/google-credentials.json"
    depends_on:
      db:
        condition: service_healthy
    volumes:
      - ./config/secret/av-app-365013-07331cd31b9f.json:/app/secret/google-credentials.json
      - media_files:/app/media:rw
    networks:
      stack_network:
        aliases:
          - backend
    ports:
      - published: 8000
        target: 8000

  proxy:
    image: nginx
    depends_on:
      backend:
        condition: service_started
    volumes:
      - media_files:/usr/share/nginx/html/media:rw
      - ./config/nginx.conf:/etc/nginx/nginx.conf:r
    networks:
      stack_network:
        aliases:
          - proxy
    ports:
      - published: 8000
        target: 80